stages:          # Liste des étapes du pipeline et leur ordre d'exécution
  - build
  - test
  - deploy

# Étape de compilation
build-job:
  stage: build
  script:
    - echo "Compilation du code..."
    - mvn clean install -DskipTests  # Compilation sans exécuter les tests
  artifacts:
    paths:
      - target/  # L'artefact généré sera dans le dossier 'target' (pour Maven)

# Étape de tests unitaires
unit-test-job:
  stage: test
  script:
    - echo "Exécution des tests unitaires..."
    - mvn test  # Exécuter les tests unitaires
  artifacts:
    when: always  # Toujours garder les rapports de tests
    paths:
      - target/surefire-reports/  # Chemin des rapports de tests JUnit
  allow_failure: false  # Si les tests échouent, le pipeline échoue

# Étape de tests de lint (vérification du code)
lint-test-job:
  stage: test
  script:
    - echo "Vérification de la syntaxe du code (Lint)..."
    - mvn lint  # Exemple de commande pour vérifier les erreurs de syntaxe
    - echo "Aucun problème de lint trouvé."
  allow_failure: true  # Si cette étape échoue, ça ne fait pas échouer le pipeline

# Étape de déploiement
deploy-job:
  stage: deploy
  script:
    - echo "Déploiement de l'application..."
    - ./deploy.sh  # Déployez l'application avec un script de déploiement
  environment: production  # Spécifie l'environnement de production
  only:
    - master  # Ne déployer que si les commits sont dans la branche 'master'
